// Code generated by go-swagger; DO NOT EDIT.

package reservations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/fortifi/go-api/models"
)

// NewPostReservationsKeyApplicationBrandFidCustomerFidParams creates a new PostReservationsKeyApplicationBrandFidCustomerFidParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostReservationsKeyApplicationBrandFidCustomerFidParams() *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	return &PostReservationsKeyApplicationBrandFidCustomerFidParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostReservationsKeyApplicationBrandFidCustomerFidParamsWithTimeout creates a new PostReservationsKeyApplicationBrandFidCustomerFidParams object
// with the ability to set a timeout on a request.
func NewPostReservationsKeyApplicationBrandFidCustomerFidParamsWithTimeout(timeout time.Duration) *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	return &PostReservationsKeyApplicationBrandFidCustomerFidParams{
		timeout: timeout,
	}
}

// NewPostReservationsKeyApplicationBrandFidCustomerFidParamsWithContext creates a new PostReservationsKeyApplicationBrandFidCustomerFidParams object
// with the ability to set a context for a request.
func NewPostReservationsKeyApplicationBrandFidCustomerFidParamsWithContext(ctx context.Context) *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	return &PostReservationsKeyApplicationBrandFidCustomerFidParams{
		Context: ctx,
	}
}

// NewPostReservationsKeyApplicationBrandFidCustomerFidParamsWithHTTPClient creates a new PostReservationsKeyApplicationBrandFidCustomerFidParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostReservationsKeyApplicationBrandFidCustomerFidParamsWithHTTPClient(client *http.Client) *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	return &PostReservationsKeyApplicationBrandFidCustomerFidParams{
		HTTPClient: client,
	}
}

/* PostReservationsKeyApplicationBrandFidCustomerFidParams contains all the parameters to send to the API endpoint
   for the post reservations key application brand fid customer fid operation.

   Typically these are written to a http.Request.
*/
type PostReservationsKeyApplicationBrandFidCustomerFidParams struct {

	// Application.
	Application string

	// BrandFid.
	BrandFid string

	/* CustomerFid.

	   Customer FID to use
	*/
	CustomerFid string

	// Key.
	Key string

	// Payload.
	Payload *models.ReservationPayload

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post reservations key application brand fid customer fid params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) WithDefaults() *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post reservations key application brand fid customer fid params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) WithTimeout(timeout time.Duration) *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) WithContext(ctx context.Context) *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) WithHTTPClient(client *http.Client) *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApplication adds the application to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) WithApplication(application string) *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	o.SetApplication(application)
	return o
}

// SetApplication adds the application to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) SetApplication(application string) {
	o.Application = application
}

// WithBrandFid adds the brandFid to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) WithBrandFid(brandFid string) *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	o.SetBrandFid(brandFid)
	return o
}

// SetBrandFid adds the brandFid to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) SetBrandFid(brandFid string) {
	o.BrandFid = brandFid
}

// WithCustomerFid adds the customerFid to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) WithCustomerFid(customerFid string) *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	o.SetCustomerFid(customerFid)
	return o
}

// SetCustomerFid adds the customerFid to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) SetCustomerFid(customerFid string) {
	o.CustomerFid = customerFid
}

// WithKey adds the key to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) WithKey(key string) *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	o.SetKey(key)
	return o
}

// SetKey adds the key to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) SetKey(key string) {
	o.Key = key
}

// WithPayload adds the payload to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) WithPayload(payload *models.ReservationPayload) *PostReservationsKeyApplicationBrandFidCustomerFidParams {
	o.SetPayload(payload)
	return o
}

// SetPayload adds the payload to the post reservations key application brand fid customer fid params
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) SetPayload(payload *models.ReservationPayload) {
	o.Payload = payload
}

// WriteToRequest writes these params to a swagger request
func (o *PostReservationsKeyApplicationBrandFidCustomerFidParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param application
	if err := r.SetPathParam("application", o.Application); err != nil {
		return err
	}

	// path param brandFid
	if err := r.SetPathParam("brandFid", o.BrandFid); err != nil {
		return err
	}

	// path param customerFid
	if err := r.SetPathParam("customerFid", o.CustomerFid); err != nil {
		return err
	}

	// path param key
	if err := r.SetPathParam("key", o.Key); err != nil {
		return err
	}
	if o.Payload != nil {
		if err := r.SetBodyParam(o.Payload); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
