// Code generated by go-swagger; DO NOT EDIT.

package marketing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/fortifi/go-api/models"
)

// NewPostVisitorsVisitorIDActionsActionKeyReverseParams creates a new PostVisitorsVisitorIDActionsActionKeyReverseParams object
// with the default values initialized.
func NewPostVisitorsVisitorIDActionsActionKeyReverseParams() *PostVisitorsVisitorIDActionsActionKeyReverseParams {
	var ()
	return &PostVisitorsVisitorIDActionsActionKeyReverseParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostVisitorsVisitorIDActionsActionKeyReverseParamsWithTimeout creates a new PostVisitorsVisitorIDActionsActionKeyReverseParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostVisitorsVisitorIDActionsActionKeyReverseParamsWithTimeout(timeout time.Duration) *PostVisitorsVisitorIDActionsActionKeyReverseParams {
	var ()
	return &PostVisitorsVisitorIDActionsActionKeyReverseParams{

		timeout: timeout,
	}
}

// NewPostVisitorsVisitorIDActionsActionKeyReverseParamsWithContext creates a new PostVisitorsVisitorIDActionsActionKeyReverseParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostVisitorsVisitorIDActionsActionKeyReverseParamsWithContext(ctx context.Context) *PostVisitorsVisitorIDActionsActionKeyReverseParams {
	var ()
	return &PostVisitorsVisitorIDActionsActionKeyReverseParams{

		Context: ctx,
	}
}

// NewPostVisitorsVisitorIDActionsActionKeyReverseParamsWithHTTPClient creates a new PostVisitorsVisitorIDActionsActionKeyReverseParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostVisitorsVisitorIDActionsActionKeyReverseParamsWithHTTPClient(client *http.Client) *PostVisitorsVisitorIDActionsActionKeyReverseParams {
	var ()
	return &PostVisitorsVisitorIDActionsActionKeyReverseParams{
		HTTPClient: client,
	}
}

/*PostVisitorsVisitorIDActionsActionKeyReverseParams contains all the parameters to send to the API endpoint
for the post visitors visitor ID actions action key reverse operation typically these are written to a http.Request
*/
type PostVisitorsVisitorIDActionsActionKeyReverseParams struct {

	/*ActionKey
	  Action key of the action to reverse e.g. lead

	*/
	ActionKey string
	/*Payload*/
	Payload *models.ReverseActionPayload
	/*VisitorID
	  'Visitor ID from the cookie.
	If providing a pre-linked external reference, should be set to 'byref'.
	If no visitor ID is known, client IP should be provided and visitorId should be set to 'unknown''


	*/
	VisitorID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post visitors visitor ID actions action key reverse params
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) WithTimeout(timeout time.Duration) *PostVisitorsVisitorIDActionsActionKeyReverseParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post visitors visitor ID actions action key reverse params
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post visitors visitor ID actions action key reverse params
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) WithContext(ctx context.Context) *PostVisitorsVisitorIDActionsActionKeyReverseParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post visitors visitor ID actions action key reverse params
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post visitors visitor ID actions action key reverse params
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) WithHTTPClient(client *http.Client) *PostVisitorsVisitorIDActionsActionKeyReverseParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post visitors visitor ID actions action key reverse params
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActionKey adds the actionKey to the post visitors visitor ID actions action key reverse params
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) WithActionKey(actionKey string) *PostVisitorsVisitorIDActionsActionKeyReverseParams {
	o.SetActionKey(actionKey)
	return o
}

// SetActionKey adds the actionKey to the post visitors visitor ID actions action key reverse params
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) SetActionKey(actionKey string) {
	o.ActionKey = actionKey
}

// WithPayload adds the payload to the post visitors visitor ID actions action key reverse params
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) WithPayload(payload *models.ReverseActionPayload) *PostVisitorsVisitorIDActionsActionKeyReverseParams {
	o.SetPayload(payload)
	return o
}

// SetPayload adds the payload to the post visitors visitor ID actions action key reverse params
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) SetPayload(payload *models.ReverseActionPayload) {
	o.Payload = payload
}

// WithVisitorID adds the visitorID to the post visitors visitor ID actions action key reverse params
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) WithVisitorID(visitorID string) *PostVisitorsVisitorIDActionsActionKeyReverseParams {
	o.SetVisitorID(visitorID)
	return o
}

// SetVisitorID adds the visitorId to the post visitors visitor ID actions action key reverse params
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) SetVisitorID(visitorID string) {
	o.VisitorID = visitorID
}

// WriteToRequest writes these params to a swagger request
func (o *PostVisitorsVisitorIDActionsActionKeyReverseParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param actionKey
	if err := r.SetPathParam("actionKey", o.ActionKey); err != nil {
		return err
	}

	if o.Payload != nil {
		if err := r.SetBodyParam(o.Payload); err != nil {
			return err
		}
	}

	// path param visitorId
	if err := r.SetPathParam("visitorId", o.VisitorID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
