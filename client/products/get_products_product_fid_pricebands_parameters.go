// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetProductsProductFidPricebandsParams creates a new GetProductsProductFidPricebandsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetProductsProductFidPricebandsParams() *GetProductsProductFidPricebandsParams {
	return &GetProductsProductFidPricebandsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetProductsProductFidPricebandsParamsWithTimeout creates a new GetProductsProductFidPricebandsParams object
// with the ability to set a timeout on a request.
func NewGetProductsProductFidPricebandsParamsWithTimeout(timeout time.Duration) *GetProductsProductFidPricebandsParams {
	return &GetProductsProductFidPricebandsParams{
		timeout: timeout,
	}
}

// NewGetProductsProductFidPricebandsParamsWithContext creates a new GetProductsProductFidPricebandsParams object
// with the ability to set a context for a request.
func NewGetProductsProductFidPricebandsParamsWithContext(ctx context.Context) *GetProductsProductFidPricebandsParams {
	return &GetProductsProductFidPricebandsParams{
		Context: ctx,
	}
}

// NewGetProductsProductFidPricebandsParamsWithHTTPClient creates a new GetProductsProductFidPricebandsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetProductsProductFidPricebandsParamsWithHTTPClient(client *http.Client) *GetProductsProductFidPricebandsParams {
	return &GetProductsProductFidPricebandsParams{
		HTTPClient: client,
	}
}

/* GetProductsProductFidPricebandsParams contains all the parameters to send to the API endpoint
   for the get products product fid pricebands operation.

   Typically these are written to a http.Request.
*/
type GetProductsProductFidPricebandsParams struct {

	// Currency.
	Currency *string

	// ProductFid.
	ProductFid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get products product fid pricebands params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProductsProductFidPricebandsParams) WithDefaults() *GetProductsProductFidPricebandsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get products product fid pricebands params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetProductsProductFidPricebandsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get products product fid pricebands params
func (o *GetProductsProductFidPricebandsParams) WithTimeout(timeout time.Duration) *GetProductsProductFidPricebandsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get products product fid pricebands params
func (o *GetProductsProductFidPricebandsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get products product fid pricebands params
func (o *GetProductsProductFidPricebandsParams) WithContext(ctx context.Context) *GetProductsProductFidPricebandsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get products product fid pricebands params
func (o *GetProductsProductFidPricebandsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get products product fid pricebands params
func (o *GetProductsProductFidPricebandsParams) WithHTTPClient(client *http.Client) *GetProductsProductFidPricebandsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get products product fid pricebands params
func (o *GetProductsProductFidPricebandsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCurrency adds the currency to the get products product fid pricebands params
func (o *GetProductsProductFidPricebandsParams) WithCurrency(currency *string) *GetProductsProductFidPricebandsParams {
	o.SetCurrency(currency)
	return o
}

// SetCurrency adds the currency to the get products product fid pricebands params
func (o *GetProductsProductFidPricebandsParams) SetCurrency(currency *string) {
	o.Currency = currency
}

// WithProductFid adds the productFid to the get products product fid pricebands params
func (o *GetProductsProductFidPricebandsParams) WithProductFid(productFid string) *GetProductsProductFidPricebandsParams {
	o.SetProductFid(productFid)
	return o
}

// SetProductFid adds the productFid to the get products product fid pricebands params
func (o *GetProductsProductFidPricebandsParams) SetProductFid(productFid string) {
	o.ProductFid = productFid
}

// WriteToRequest writes these params to a swagger request
func (o *GetProductsProductFidPricebandsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Currency != nil {

		// form param currency
		var frCurrency string
		if o.Currency != nil {
			frCurrency = *o.Currency
		}
		fCurrency := frCurrency
		if fCurrency != "" {
			if err := r.SetFormParam("currency", fCurrency); err != nil {
				return err
			}
		}
	}

	// path param productFid
	if err := r.SetPathParam("productFid", o.ProductFid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
