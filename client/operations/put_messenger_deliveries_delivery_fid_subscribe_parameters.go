// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutMessengerDeliveriesDeliveryFidSubscribeParams creates a new PutMessengerDeliveriesDeliveryFidSubscribeParams object
// with the default values initialized.
func NewPutMessengerDeliveriesDeliveryFidSubscribeParams() *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	var ()
	return &PutMessengerDeliveriesDeliveryFidSubscribeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutMessengerDeliveriesDeliveryFidSubscribeParamsWithTimeout creates a new PutMessengerDeliveriesDeliveryFidSubscribeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutMessengerDeliveriesDeliveryFidSubscribeParamsWithTimeout(timeout time.Duration) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	var ()
	return &PutMessengerDeliveriesDeliveryFidSubscribeParams{

		timeout: timeout,
	}
}

// NewPutMessengerDeliveriesDeliveryFidSubscribeParamsWithContext creates a new PutMessengerDeliveriesDeliveryFidSubscribeParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutMessengerDeliveriesDeliveryFidSubscribeParamsWithContext(ctx context.Context) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	var ()
	return &PutMessengerDeliveriesDeliveryFidSubscribeParams{

		Context: ctx,
	}
}

// NewPutMessengerDeliveriesDeliveryFidSubscribeParamsWithHTTPClient creates a new PutMessengerDeliveriesDeliveryFidSubscribeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutMessengerDeliveriesDeliveryFidSubscribeParamsWithHTTPClient(client *http.Client) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	var ()
	return &PutMessengerDeliveriesDeliveryFidSubscribeParams{
		HTTPClient: client,
	}
}

/*PutMessengerDeliveriesDeliveryFidSubscribeParams contains all the parameters to send to the API endpoint
for the put messenger deliveries delivery fid subscribe operation typically these are written to a http.Request
*/
type PutMessengerDeliveriesDeliveryFidSubscribeParams struct {

	/*ClientIP
	  IP Address of the visitor

	*/
	ClientIP *string
	/*DeliveryFid
	  Delivery FID

	*/
	DeliveryFid string
	/*Encoding
	  Encoding from the visitors browser 'HTTP_ACCEPT_ENCODING'

	*/
	Encoding *string
	/*Language
	  Language from visitors browser 'HTTP_ACCEPT_LANGUAGE'

	*/
	Language *string
	/*OptInData
	  Additional data to store against opt-in

	*/
	OptInData []string
	/*OptInStatus
	  Status of customer email opt-in

	*/
	OptInStatus *string
	/*UserAgent
	  User Agent of the visitors browser 'HTTP_USER_AGENT'

	*/
	UserAgent *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) WithTimeout(timeout time.Duration) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) WithContext(ctx context.Context) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) WithHTTPClient(client *http.Client) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClientIP adds the clientIP to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) WithClientIP(clientIP *string) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	o.SetClientIP(clientIP)
	return o
}

// SetClientIP adds the clientIp to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) SetClientIP(clientIP *string) {
	o.ClientIP = clientIP
}

// WithDeliveryFid adds the deliveryFid to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) WithDeliveryFid(deliveryFid string) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	o.SetDeliveryFid(deliveryFid)
	return o
}

// SetDeliveryFid adds the deliveryFid to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) SetDeliveryFid(deliveryFid string) {
	o.DeliveryFid = deliveryFid
}

// WithEncoding adds the encoding to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) WithEncoding(encoding *string) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	o.SetEncoding(encoding)
	return o
}

// SetEncoding adds the encoding to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) SetEncoding(encoding *string) {
	o.Encoding = encoding
}

// WithLanguage adds the language to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) WithLanguage(language *string) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	o.SetLanguage(language)
	return o
}

// SetLanguage adds the language to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) SetLanguage(language *string) {
	o.Language = language
}

// WithOptInData adds the optInData to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) WithOptInData(optInData []string) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	o.SetOptInData(optInData)
	return o
}

// SetOptInData adds the optInData to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) SetOptInData(optInData []string) {
	o.OptInData = optInData
}

// WithOptInStatus adds the optInStatus to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) WithOptInStatus(optInStatus *string) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	o.SetOptInStatus(optInStatus)
	return o
}

// SetOptInStatus adds the optInStatus to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) SetOptInStatus(optInStatus *string) {
	o.OptInStatus = optInStatus
}

// WithUserAgent adds the userAgent to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) WithUserAgent(userAgent *string) *PutMessengerDeliveriesDeliveryFidSubscribeParams {
	o.SetUserAgent(userAgent)
	return o
}

// SetUserAgent adds the userAgent to the put messenger deliveries delivery fid subscribe params
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) SetUserAgent(userAgent *string) {
	o.UserAgent = userAgent
}

// WriteToRequest writes these params to a swagger request
func (o *PutMessengerDeliveriesDeliveryFidSubscribeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ClientIP != nil {

		// form param clientIp
		var frClientIP string
		if o.ClientIP != nil {
			frClientIP = *o.ClientIP
		}
		fClientIP := frClientIP
		if fClientIP != "" {
			if err := r.SetFormParam("clientIp", fClientIP); err != nil {
				return err
			}
		}

	}

	// path param deliveryFid
	if err := r.SetPathParam("deliveryFid", o.DeliveryFid); err != nil {
		return err
	}

	if o.Encoding != nil {

		// form param encoding
		var frEncoding string
		if o.Encoding != nil {
			frEncoding = *o.Encoding
		}
		fEncoding := frEncoding
		if fEncoding != "" {
			if err := r.SetFormParam("encoding", fEncoding); err != nil {
				return err
			}
		}

	}

	if o.Language != nil {

		// form param language
		var frLanguage string
		if o.Language != nil {
			frLanguage = *o.Language
		}
		fLanguage := frLanguage
		if fLanguage != "" {
			if err := r.SetFormParam("language", fLanguage); err != nil {
				return err
			}
		}

	}

	valuesOptInData := o.OptInData

	joinedOptInData := swag.JoinByFormat(valuesOptInData, "")
	// form array param optInData
	if err := r.SetFormParam("optInData", joinedOptInData...); err != nil {
		return err
	}

	if o.OptInStatus != nil {

		// form param optInStatus
		var frOptInStatus string
		if o.OptInStatus != nil {
			frOptInStatus = *o.OptInStatus
		}
		fOptInStatus := frOptInStatus
		if fOptInStatus != "" {
			if err := r.SetFormParam("optInStatus", fOptInStatus); err != nil {
				return err
			}
		}

	}

	if o.UserAgent != nil {

		// form param userAgent
		var frUserAgent string
		if o.UserAgent != nil {
			frUserAgent = *o.UserAgent
		}
		fUserAgent := frUserAgent
		if fUserAgent != "" {
			if err := r.SetFormParam("userAgent", fUserAgent); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
