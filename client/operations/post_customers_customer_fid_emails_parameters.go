// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostCustomersCustomerFidEmailsParams creates a new PostCustomersCustomerFidEmailsParams object
// with the default values initialized.
func NewPostCustomersCustomerFidEmailsParams() *PostCustomersCustomerFidEmailsParams {
	var ()
	return &PostCustomersCustomerFidEmailsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostCustomersCustomerFidEmailsParamsWithTimeout creates a new PostCustomersCustomerFidEmailsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostCustomersCustomerFidEmailsParamsWithTimeout(timeout time.Duration) *PostCustomersCustomerFidEmailsParams {
	var ()
	return &PostCustomersCustomerFidEmailsParams{

		timeout: timeout,
	}
}

// NewPostCustomersCustomerFidEmailsParamsWithContext creates a new PostCustomersCustomerFidEmailsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostCustomersCustomerFidEmailsParamsWithContext(ctx context.Context) *PostCustomersCustomerFidEmailsParams {
	var ()
	return &PostCustomersCustomerFidEmailsParams{

		Context: ctx,
	}
}

// NewPostCustomersCustomerFidEmailsParamsWithHTTPClient creates a new PostCustomersCustomerFidEmailsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostCustomersCustomerFidEmailsParamsWithHTTPClient(client *http.Client) *PostCustomersCustomerFidEmailsParams {
	var ()
	return &PostCustomersCustomerFidEmailsParams{
		HTTPClient: client,
	}
}

/*PostCustomersCustomerFidEmailsParams contains all the parameters to send to the API endpoint
for the post customers customer fid emails operation typically these are written to a http.Request
*/
type PostCustomersCustomerFidEmailsParams struct {

	/*CustomerFid
	  Customer FID to use

	*/
	CustomerFid string
	/*EmailAddress*/
	EmailAddress string
	/*SetAsDefault*/
	SetAsDefault *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post customers customer fid emails params
func (o *PostCustomersCustomerFidEmailsParams) WithTimeout(timeout time.Duration) *PostCustomersCustomerFidEmailsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post customers customer fid emails params
func (o *PostCustomersCustomerFidEmailsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post customers customer fid emails params
func (o *PostCustomersCustomerFidEmailsParams) WithContext(ctx context.Context) *PostCustomersCustomerFidEmailsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post customers customer fid emails params
func (o *PostCustomersCustomerFidEmailsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post customers customer fid emails params
func (o *PostCustomersCustomerFidEmailsParams) WithHTTPClient(client *http.Client) *PostCustomersCustomerFidEmailsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post customers customer fid emails params
func (o *PostCustomersCustomerFidEmailsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCustomerFid adds the customerFid to the post customers customer fid emails params
func (o *PostCustomersCustomerFidEmailsParams) WithCustomerFid(customerFid string) *PostCustomersCustomerFidEmailsParams {
	o.SetCustomerFid(customerFid)
	return o
}

// SetCustomerFid adds the customerFid to the post customers customer fid emails params
func (o *PostCustomersCustomerFidEmailsParams) SetCustomerFid(customerFid string) {
	o.CustomerFid = customerFid
}

// WithEmailAddress adds the emailAddress to the post customers customer fid emails params
func (o *PostCustomersCustomerFidEmailsParams) WithEmailAddress(emailAddress string) *PostCustomersCustomerFidEmailsParams {
	o.SetEmailAddress(emailAddress)
	return o
}

// SetEmailAddress adds the emailAddress to the post customers customer fid emails params
func (o *PostCustomersCustomerFidEmailsParams) SetEmailAddress(emailAddress string) {
	o.EmailAddress = emailAddress
}

// WithSetAsDefault adds the setAsDefault to the post customers customer fid emails params
func (o *PostCustomersCustomerFidEmailsParams) WithSetAsDefault(setAsDefault *bool) *PostCustomersCustomerFidEmailsParams {
	o.SetSetAsDefault(setAsDefault)
	return o
}

// SetSetAsDefault adds the setAsDefault to the post customers customer fid emails params
func (o *PostCustomersCustomerFidEmailsParams) SetSetAsDefault(setAsDefault *bool) {
	o.SetAsDefault = setAsDefault
}

// WriteToRequest writes these params to a swagger request
func (o *PostCustomersCustomerFidEmailsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param customerFid
	if err := r.SetPathParam("customerFid", o.CustomerFid); err != nil {
		return err
	}

	// form param emailAddress
	frEmailAddress := o.EmailAddress
	fEmailAddress := frEmailAddress
	if fEmailAddress != "" {
		if err := r.SetFormParam("emailAddress", fEmailAddress); err != nil {
			return err
		}
	}

	if o.SetAsDefault != nil {

		// form param setAsDefault
		var frSetAsDefault bool
		if o.SetAsDefault != nil {
			frSetAsDefault = *o.SetAsDefault
		}
		fSetAsDefault := swag.FormatBool(frSetAsDefault)
		if fSetAsDefault != "" {
			if err := r.SetFormParam("setAsDefault", fSetAsDefault); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
