// Code generated by go-swagger; DO NOT EDIT.

package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetIntegrationsVerifyUserParams creates a new GetIntegrationsVerifyUserParams object
// with the default values initialized.
func NewGetIntegrationsVerifyUserParams() *GetIntegrationsVerifyUserParams {
	var ()
	return &GetIntegrationsVerifyUserParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetIntegrationsVerifyUserParamsWithTimeout creates a new GetIntegrationsVerifyUserParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetIntegrationsVerifyUserParamsWithTimeout(timeout time.Duration) *GetIntegrationsVerifyUserParams {
	var ()
	return &GetIntegrationsVerifyUserParams{

		timeout: timeout,
	}
}

// NewGetIntegrationsVerifyUserParamsWithContext creates a new GetIntegrationsVerifyUserParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetIntegrationsVerifyUserParamsWithContext(ctx context.Context) *GetIntegrationsVerifyUserParams {
	var ()
	return &GetIntegrationsVerifyUserParams{

		Context: ctx,
	}
}

// NewGetIntegrationsVerifyUserParamsWithHTTPClient creates a new GetIntegrationsVerifyUserParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetIntegrationsVerifyUserParamsWithHTTPClient(client *http.Client) *GetIntegrationsVerifyUserParams {
	var ()
	return &GetIntegrationsVerifyUserParams{
		HTTPClient: client,
	}
}

/*GetIntegrationsVerifyUserParams contains all the parameters to send to the API endpoint
for the get integrations verify user operation typically these are written to a http.Request
*/
type GetIntegrationsVerifyUserParams struct {

	/*RemoteIP
	  IP of the user connecting

	*/
	RemoteIP string
	/*VerifyKey
	  Verify key found in ?fortifiverify=VERIFYKEY

	*/
	VerifyKey string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get integrations verify user params
func (o *GetIntegrationsVerifyUserParams) WithTimeout(timeout time.Duration) *GetIntegrationsVerifyUserParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get integrations verify user params
func (o *GetIntegrationsVerifyUserParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get integrations verify user params
func (o *GetIntegrationsVerifyUserParams) WithContext(ctx context.Context) *GetIntegrationsVerifyUserParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get integrations verify user params
func (o *GetIntegrationsVerifyUserParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get integrations verify user params
func (o *GetIntegrationsVerifyUserParams) WithHTTPClient(client *http.Client) *GetIntegrationsVerifyUserParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get integrations verify user params
func (o *GetIntegrationsVerifyUserParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRemoteIP adds the remoteIP to the get integrations verify user params
func (o *GetIntegrationsVerifyUserParams) WithRemoteIP(remoteIP string) *GetIntegrationsVerifyUserParams {
	o.SetRemoteIP(remoteIP)
	return o
}

// SetRemoteIP adds the remoteIp to the get integrations verify user params
func (o *GetIntegrationsVerifyUserParams) SetRemoteIP(remoteIP string) {
	o.RemoteIP = remoteIP
}

// WithVerifyKey adds the verifyKey to the get integrations verify user params
func (o *GetIntegrationsVerifyUserParams) WithVerifyKey(verifyKey string) *GetIntegrationsVerifyUserParams {
	o.SetVerifyKey(verifyKey)
	return o
}

// SetVerifyKey adds the verifyKey to the get integrations verify user params
func (o *GetIntegrationsVerifyUserParams) SetVerifyKey(verifyKey string) {
	o.VerifyKey = verifyKey
}

// WriteToRequest writes these params to a swagger request
func (o *GetIntegrationsVerifyUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param remoteIp
	qrRemoteIP := o.RemoteIP
	qRemoteIP := qrRemoteIP
	if qRemoteIP != "" {
		if err := r.SetQueryParam("remoteIp", qRemoteIP); err != nil {
			return err
		}
	}

	// query param verifyKey
	qrVerifyKey := o.VerifyKey
	qVerifyKey := qrVerifyKey
	if qVerifyKey != "" {
		if err := r.SetQueryParam("verifyKey", qVerifyKey); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
