// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/fortifi/go-api/models"
)

// PutOrdersOrderFidConfirmCardReader is a Reader for the PutOrdersOrderFidConfirmCard structure.
type PutOrdersOrderFidConfirmCardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOrdersOrderFidConfirmCardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutOrdersOrderFidConfirmCardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 503:
		result := NewPutOrdersOrderFidConfirmCardServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutOrdersOrderFidConfirmCardDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutOrdersOrderFidConfirmCardOK creates a PutOrdersOrderFidConfirmCardOK with default headers values
func NewPutOrdersOrderFidConfirmCardOK() *PutOrdersOrderFidConfirmCardOK {
	return &PutOrdersOrderFidConfirmCardOK{}
}

/*PutOrdersOrderFidConfirmCardOK handles this case with default header values.

Order confirmed and payment authroized
*/
type PutOrdersOrderFidConfirmCardOK struct {
	Payload *models.PutOrdersOrderFidConfirmCardOKBody
}

func (o *PutOrdersOrderFidConfirmCardOK) Error() string {
	return fmt.Sprintf("[PUT /orders/{orderFid}/confirmCard][%d] putOrdersOrderFidConfirmCardOK  %+v", 200, o.Payload)
}

func (o *PutOrdersOrderFidConfirmCardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PutOrdersOrderFidConfirmCardOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutOrdersOrderFidConfirmCardServiceUnavailable creates a PutOrdersOrderFidConfirmCardServiceUnavailable with default headers values
func NewPutOrdersOrderFidConfirmCardServiceUnavailable() *PutOrdersOrderFidConfirmCardServiceUnavailable {
	return &PutOrdersOrderFidConfirmCardServiceUnavailable{}
}

/*PutOrdersOrderFidConfirmCardServiceUnavailable handles this case with default header values.

There are no payment gateways available to handle your request
*/
type PutOrdersOrderFidConfirmCardServiceUnavailable struct {
}

func (o *PutOrdersOrderFidConfirmCardServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /orders/{orderFid}/confirmCard][%d] putOrdersOrderFidConfirmCardServiceUnavailable ", 503)
}

func (o *PutOrdersOrderFidConfirmCardServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutOrdersOrderFidConfirmCardDefault creates a PutOrdersOrderFidConfirmCardDefault with default headers values
func NewPutOrdersOrderFidConfirmCardDefault(code int) *PutOrdersOrderFidConfirmCardDefault {
	return &PutOrdersOrderFidConfirmCardDefault{
		_statusCode: code,
	}
}

/*PutOrdersOrderFidConfirmCardDefault handles this case with default header values.

Error
*/
type PutOrdersOrderFidConfirmCardDefault struct {
	_statusCode int

	Payload *models.Envelope
}

// Code gets the status code for the put orders order fid confirm card default response
func (o *PutOrdersOrderFidConfirmCardDefault) Code() int {
	return o._statusCode
}

func (o *PutOrdersOrderFidConfirmCardDefault) Error() string {
	return fmt.Sprintf("[PUT /orders/{orderFid}/confirmCard][%d] PutOrdersOrderFidConfirmCard default  %+v", o._statusCode, o.Payload)
}

func (o *PutOrdersOrderFidConfirmCardDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Envelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
