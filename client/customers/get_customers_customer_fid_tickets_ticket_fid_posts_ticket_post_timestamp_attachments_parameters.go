// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams creates a new GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams object
// with the default values initialized.
func NewGetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams() *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams {
	var ()
	return &GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParamsWithTimeout creates a new GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParamsWithTimeout(timeout time.Duration) *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams {
	var ()
	return &GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams{

		timeout: timeout,
	}
}

// NewGetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParamsWithContext creates a new GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParamsWithContext(ctx context.Context) *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams {
	var ()
	return &GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams{

		Context: ctx,
	}
}

// NewGetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParamsWithHTTPClient creates a new GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParamsWithHTTPClient(client *http.Client) *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams {
	var ()
	return &GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams{
		HTTPClient: client,
	}
}

/*GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams contains all the parameters to send to the API endpoint
for the get customers customer fid tickets ticket fid posts ticket post timestamp attachments operation typically these are written to a http.Request
*/
type GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams struct {

	/*CustomerFid
	  Customer FID to use

	*/
	CustomerFid string
	/*TicketFid
	  Ticket FID to use

	*/
	TicketFid string
	/*TicketPostTimestamp
	  Ticket Post Timestamp

	*/
	TicketPostTimestamp int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get customers customer fid tickets ticket fid posts ticket post timestamp attachments params
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) WithTimeout(timeout time.Duration) *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get customers customer fid tickets ticket fid posts ticket post timestamp attachments params
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get customers customer fid tickets ticket fid posts ticket post timestamp attachments params
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) WithContext(ctx context.Context) *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get customers customer fid tickets ticket fid posts ticket post timestamp attachments params
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get customers customer fid tickets ticket fid posts ticket post timestamp attachments params
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) WithHTTPClient(client *http.Client) *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get customers customer fid tickets ticket fid posts ticket post timestamp attachments params
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCustomerFid adds the customerFid to the get customers customer fid tickets ticket fid posts ticket post timestamp attachments params
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) WithCustomerFid(customerFid string) *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams {
	o.SetCustomerFid(customerFid)
	return o
}

// SetCustomerFid adds the customerFid to the get customers customer fid tickets ticket fid posts ticket post timestamp attachments params
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) SetCustomerFid(customerFid string) {
	o.CustomerFid = customerFid
}

// WithTicketFid adds the ticketFid to the get customers customer fid tickets ticket fid posts ticket post timestamp attachments params
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) WithTicketFid(ticketFid string) *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams {
	o.SetTicketFid(ticketFid)
	return o
}

// SetTicketFid adds the ticketFid to the get customers customer fid tickets ticket fid posts ticket post timestamp attachments params
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) SetTicketFid(ticketFid string) {
	o.TicketFid = ticketFid
}

// WithTicketPostTimestamp adds the ticketPostTimestamp to the get customers customer fid tickets ticket fid posts ticket post timestamp attachments params
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) WithTicketPostTimestamp(ticketPostTimestamp int64) *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams {
	o.SetTicketPostTimestamp(ticketPostTimestamp)
	return o
}

// SetTicketPostTimestamp adds the ticketPostTimestamp to the get customers customer fid tickets ticket fid posts ticket post timestamp attachments params
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) SetTicketPostTimestamp(ticketPostTimestamp int64) {
	o.TicketPostTimestamp = ticketPostTimestamp
}

// WriteToRequest writes these params to a swagger request
func (o *GetCustomersCustomerFidTicketsTicketFidPostsTicketPostTimestampAttachmentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param customerFid
	if err := r.SetPathParam("customerFid", o.CustomerFid); err != nil {
		return err
	}

	// path param ticketFid
	if err := r.SetPathParam("ticketFid", o.TicketFid); err != nil {
		return err
	}

	// path param ticketPostTimestamp
	if err := r.SetPathParam("ticketPostTimestamp", swag.FormatInt64(o.TicketPostTimestamp)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
