// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPutCustomersCustomerFidBillingDataParams creates a new PutCustomersCustomerFidBillingDataParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutCustomersCustomerFidBillingDataParams() *PutCustomersCustomerFidBillingDataParams {
	return &PutCustomersCustomerFidBillingDataParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutCustomersCustomerFidBillingDataParamsWithTimeout creates a new PutCustomersCustomerFidBillingDataParams object
// with the ability to set a timeout on a request.
func NewPutCustomersCustomerFidBillingDataParamsWithTimeout(timeout time.Duration) *PutCustomersCustomerFidBillingDataParams {
	return &PutCustomersCustomerFidBillingDataParams{
		timeout: timeout,
	}
}

// NewPutCustomersCustomerFidBillingDataParamsWithContext creates a new PutCustomersCustomerFidBillingDataParams object
// with the ability to set a context for a request.
func NewPutCustomersCustomerFidBillingDataParamsWithContext(ctx context.Context) *PutCustomersCustomerFidBillingDataParams {
	return &PutCustomersCustomerFidBillingDataParams{
		Context: ctx,
	}
}

// NewPutCustomersCustomerFidBillingDataParamsWithHTTPClient creates a new PutCustomersCustomerFidBillingDataParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutCustomersCustomerFidBillingDataParamsWithHTTPClient(client *http.Client) *PutCustomersCustomerFidBillingDataParams {
	return &PutCustomersCustomerFidBillingDataParams{
		HTTPClient: client,
	}
}

/*
PutCustomersCustomerFidBillingDataParams contains all the parameters to send to the API endpoint

	for the put customers customer fid billing data operation.

	Typically these are written to a http.Request.
*/
type PutCustomersCustomerFidBillingDataParams struct {

	// BillingType.
	BillingType *string

	// CompanyNumber.
	CompanyNumber *string

	/* CustomerFid.

	   Customer FID to use
	*/
	CustomerFid string

	// KnownIP.
	KnownIP *string

	// TaxNumber.
	TaxNumber *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put customers customer fid billing data params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutCustomersCustomerFidBillingDataParams) WithDefaults() *PutCustomersCustomerFidBillingDataParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put customers customer fid billing data params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutCustomersCustomerFidBillingDataParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) WithTimeout(timeout time.Duration) *PutCustomersCustomerFidBillingDataParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) WithContext(ctx context.Context) *PutCustomersCustomerFidBillingDataParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) WithHTTPClient(client *http.Client) *PutCustomersCustomerFidBillingDataParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBillingType adds the billingType to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) WithBillingType(billingType *string) *PutCustomersCustomerFidBillingDataParams {
	o.SetBillingType(billingType)
	return o
}

// SetBillingType adds the billingType to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) SetBillingType(billingType *string) {
	o.BillingType = billingType
}

// WithCompanyNumber adds the companyNumber to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) WithCompanyNumber(companyNumber *string) *PutCustomersCustomerFidBillingDataParams {
	o.SetCompanyNumber(companyNumber)
	return o
}

// SetCompanyNumber adds the companyNumber to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) SetCompanyNumber(companyNumber *string) {
	o.CompanyNumber = companyNumber
}

// WithCustomerFid adds the customerFid to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) WithCustomerFid(customerFid string) *PutCustomersCustomerFidBillingDataParams {
	o.SetCustomerFid(customerFid)
	return o
}

// SetCustomerFid adds the customerFid to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) SetCustomerFid(customerFid string) {
	o.CustomerFid = customerFid
}

// WithKnownIP adds the knownIP to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) WithKnownIP(knownIP *string) *PutCustomersCustomerFidBillingDataParams {
	o.SetKnownIP(knownIP)
	return o
}

// SetKnownIP adds the knownIp to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) SetKnownIP(knownIP *string) {
	o.KnownIP = knownIP
}

// WithTaxNumber adds the taxNumber to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) WithTaxNumber(taxNumber *string) *PutCustomersCustomerFidBillingDataParams {
	o.SetTaxNumber(taxNumber)
	return o
}

// SetTaxNumber adds the taxNumber to the put customers customer fid billing data params
func (o *PutCustomersCustomerFidBillingDataParams) SetTaxNumber(taxNumber *string) {
	o.TaxNumber = taxNumber
}

// WriteToRequest writes these params to a swagger request
func (o *PutCustomersCustomerFidBillingDataParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BillingType != nil {

		// form param billingType
		var frBillingType string
		if o.BillingType != nil {
			frBillingType = *o.BillingType
		}
		fBillingType := frBillingType
		if fBillingType != "" {
			if err := r.SetFormParam("billingType", fBillingType); err != nil {
				return err
			}
		}
	}

	if o.CompanyNumber != nil {

		// form param companyNumber
		var frCompanyNumber string
		if o.CompanyNumber != nil {
			frCompanyNumber = *o.CompanyNumber
		}
		fCompanyNumber := frCompanyNumber
		if fCompanyNumber != "" {
			if err := r.SetFormParam("companyNumber", fCompanyNumber); err != nil {
				return err
			}
		}
	}

	// path param customerFid
	if err := r.SetPathParam("customerFid", o.CustomerFid); err != nil {
		return err
	}

	if o.KnownIP != nil {

		// form param knownIP
		var frKnownIP string
		if o.KnownIP != nil {
			frKnownIP = *o.KnownIP
		}
		fKnownIP := frKnownIP
		if fKnownIP != "" {
			if err := r.SetFormParam("knownIP", fKnownIP); err != nil {
				return err
			}
		}
	}

	if o.TaxNumber != nil {

		// form param taxNumber
		var frTaxNumber string
		if o.TaxNumber != nil {
			frTaxNumber = *o.TaxNumber
		}
		fTaxNumber := frTaxNumber
		if fTaxNumber != "" {
			if err := r.SetFormParam("taxNumber", fTaxNumber); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
