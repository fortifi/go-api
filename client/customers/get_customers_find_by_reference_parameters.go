// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetCustomersFindByReferenceParams creates a new GetCustomersFindByReferenceParams object
// with the default values initialized.
func NewGetCustomersFindByReferenceParams() *GetCustomersFindByReferenceParams {
	var ()
	return &GetCustomersFindByReferenceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCustomersFindByReferenceParamsWithTimeout creates a new GetCustomersFindByReferenceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCustomersFindByReferenceParamsWithTimeout(timeout time.Duration) *GetCustomersFindByReferenceParams {
	var ()
	return &GetCustomersFindByReferenceParams{

		timeout: timeout,
	}
}

// NewGetCustomersFindByReferenceParamsWithContext creates a new GetCustomersFindByReferenceParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCustomersFindByReferenceParamsWithContext(ctx context.Context) *GetCustomersFindByReferenceParams {
	var ()
	return &GetCustomersFindByReferenceParams{

		Context: ctx,
	}
}

// NewGetCustomersFindByReferenceParamsWithHTTPClient creates a new GetCustomersFindByReferenceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCustomersFindByReferenceParamsWithHTTPClient(client *http.Client) *GetCustomersFindByReferenceParams {
	var ()
	return &GetCustomersFindByReferenceParams{
		HTTPClient: client,
	}
}

/*GetCustomersFindByReferenceParams contains all the parameters to send to the API endpoint
for the get customers find by reference operation typically these are written to a http.Request
*/
type GetCustomersFindByReferenceParams struct {

	/*Reference
	  Your reference for the customer

	*/
	Reference *string
	/*RetrieveBillingData*/
	RetrieveBillingData *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get customers find by reference params
func (o *GetCustomersFindByReferenceParams) WithTimeout(timeout time.Duration) *GetCustomersFindByReferenceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get customers find by reference params
func (o *GetCustomersFindByReferenceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get customers find by reference params
func (o *GetCustomersFindByReferenceParams) WithContext(ctx context.Context) *GetCustomersFindByReferenceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get customers find by reference params
func (o *GetCustomersFindByReferenceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get customers find by reference params
func (o *GetCustomersFindByReferenceParams) WithHTTPClient(client *http.Client) *GetCustomersFindByReferenceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get customers find by reference params
func (o *GetCustomersFindByReferenceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithReference adds the reference to the get customers find by reference params
func (o *GetCustomersFindByReferenceParams) WithReference(reference *string) *GetCustomersFindByReferenceParams {
	o.SetReference(reference)
	return o
}

// SetReference adds the reference to the get customers find by reference params
func (o *GetCustomersFindByReferenceParams) SetReference(reference *string) {
	o.Reference = reference
}

// WithRetrieveBillingData adds the retrieveBillingData to the get customers find by reference params
func (o *GetCustomersFindByReferenceParams) WithRetrieveBillingData(retrieveBillingData *bool) *GetCustomersFindByReferenceParams {
	o.SetRetrieveBillingData(retrieveBillingData)
	return o
}

// SetRetrieveBillingData adds the retrieveBillingData to the get customers find by reference params
func (o *GetCustomersFindByReferenceParams) SetRetrieveBillingData(retrieveBillingData *bool) {
	o.RetrieveBillingData = retrieveBillingData
}

// WriteToRequest writes these params to a swagger request
func (o *GetCustomersFindByReferenceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Reference != nil {

		// query param reference
		var qrReference string
		if o.Reference != nil {
			qrReference = *o.Reference
		}
		qReference := qrReference
		if qReference != "" {
			if err := r.SetQueryParam("reference", qReference); err != nil {
				return err
			}
		}

	}

	if o.RetrieveBillingData != nil {

		// query param retrieveBillingData
		var qrRetrieveBillingData bool
		if o.RetrieveBillingData != nil {
			qrRetrieveBillingData = *o.RetrieveBillingData
		}
		qRetrieveBillingData := swag.FormatBool(qrRetrieveBillingData)
		if qRetrieveBillingData != "" {
			if err := r.SetQueryParam("retrieveBillingData", qRetrieveBillingData); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
