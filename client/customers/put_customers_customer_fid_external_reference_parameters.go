// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPutCustomersCustomerFidExternalReferenceParams creates a new PutCustomersCustomerFidExternalReferenceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutCustomersCustomerFidExternalReferenceParams() *PutCustomersCustomerFidExternalReferenceParams {
	return &PutCustomersCustomerFidExternalReferenceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutCustomersCustomerFidExternalReferenceParamsWithTimeout creates a new PutCustomersCustomerFidExternalReferenceParams object
// with the ability to set a timeout on a request.
func NewPutCustomersCustomerFidExternalReferenceParamsWithTimeout(timeout time.Duration) *PutCustomersCustomerFidExternalReferenceParams {
	return &PutCustomersCustomerFidExternalReferenceParams{
		timeout: timeout,
	}
}

// NewPutCustomersCustomerFidExternalReferenceParamsWithContext creates a new PutCustomersCustomerFidExternalReferenceParams object
// with the ability to set a context for a request.
func NewPutCustomersCustomerFidExternalReferenceParamsWithContext(ctx context.Context) *PutCustomersCustomerFidExternalReferenceParams {
	return &PutCustomersCustomerFidExternalReferenceParams{
		Context: ctx,
	}
}

// NewPutCustomersCustomerFidExternalReferenceParamsWithHTTPClient creates a new PutCustomersCustomerFidExternalReferenceParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutCustomersCustomerFidExternalReferenceParamsWithHTTPClient(client *http.Client) *PutCustomersCustomerFidExternalReferenceParams {
	return &PutCustomersCustomerFidExternalReferenceParams{
		HTTPClient: client,
	}
}

/*
PutCustomersCustomerFidExternalReferenceParams contains all the parameters to send to the API endpoint

	for the put customers customer fid external reference operation.

	Typically these are written to a http.Request.
*/
type PutCustomersCustomerFidExternalReferenceParams struct {

	/* CustomerFid.

	   Customer FID to use
	*/
	CustomerFid string

	/* ExternalReference.

	   New External Reference
	*/
	ExternalReference string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put customers customer fid external reference params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutCustomersCustomerFidExternalReferenceParams) WithDefaults() *PutCustomersCustomerFidExternalReferenceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put customers customer fid external reference params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutCustomersCustomerFidExternalReferenceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put customers customer fid external reference params
func (o *PutCustomersCustomerFidExternalReferenceParams) WithTimeout(timeout time.Duration) *PutCustomersCustomerFidExternalReferenceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put customers customer fid external reference params
func (o *PutCustomersCustomerFidExternalReferenceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put customers customer fid external reference params
func (o *PutCustomersCustomerFidExternalReferenceParams) WithContext(ctx context.Context) *PutCustomersCustomerFidExternalReferenceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put customers customer fid external reference params
func (o *PutCustomersCustomerFidExternalReferenceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put customers customer fid external reference params
func (o *PutCustomersCustomerFidExternalReferenceParams) WithHTTPClient(client *http.Client) *PutCustomersCustomerFidExternalReferenceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put customers customer fid external reference params
func (o *PutCustomersCustomerFidExternalReferenceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCustomerFid adds the customerFid to the put customers customer fid external reference params
func (o *PutCustomersCustomerFidExternalReferenceParams) WithCustomerFid(customerFid string) *PutCustomersCustomerFidExternalReferenceParams {
	o.SetCustomerFid(customerFid)
	return o
}

// SetCustomerFid adds the customerFid to the put customers customer fid external reference params
func (o *PutCustomersCustomerFidExternalReferenceParams) SetCustomerFid(customerFid string) {
	o.CustomerFid = customerFid
}

// WithExternalReference adds the externalReference to the put customers customer fid external reference params
func (o *PutCustomersCustomerFidExternalReferenceParams) WithExternalReference(externalReference string) *PutCustomersCustomerFidExternalReferenceParams {
	o.SetExternalReference(externalReference)
	return o
}

// SetExternalReference adds the externalReference to the put customers customer fid external reference params
func (o *PutCustomersCustomerFidExternalReferenceParams) SetExternalReference(externalReference string) {
	o.ExternalReference = externalReference
}

// WriteToRequest writes these params to a swagger request
func (o *PutCustomersCustomerFidExternalReferenceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param customerFid
	if err := r.SetPathParam("customerFid", o.CustomerFid); err != nil {
		return err
	}

	// form param externalReference
	frExternalReference := o.ExternalReference
	fExternalReference := frExternalReference
	if fExternalReference != "" {
		if err := r.SetFormParam("externalReference", fExternalReference); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
