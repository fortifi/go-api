// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams creates a new PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams() *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	return &PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParamsWithTimeout creates a new PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams object
// with the ability to set a timeout on a request.
func NewPutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParamsWithTimeout(timeout time.Duration) *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	return &PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams{
		timeout: timeout,
	}
}

// NewPutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParamsWithContext creates a new PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams object
// with the ability to set a context for a request.
func NewPutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParamsWithContext(ctx context.Context) *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	return &PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams{
		Context: ctx,
	}
}

// NewPutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParamsWithHTTPClient creates a new PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParamsWithHTTPClient(client *http.Client) *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	return &PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams{
		HTTPClient: client,
	}
}

/* PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams contains all the parameters to send to the API endpoint
   for the put customers customer fid subscriptions subscription fid periods period fid refund operation.

   Typically these are written to a http.Request.
*/
type PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams struct {

	// AddCreditToInvoice.
	AddCreditToInvoice *bool

	/* CustomerFid.

	   Customer FID to use
	*/
	CustomerFid string

	/* PeriodFid.

	   Period FID to use
	*/
	PeriodFid string

	// Reason.
	Reason *string

	// RefundAmount.
	RefundAmount *float64

	/* SubscriptionFid.

	   Subscription FID to use
	*/
	SubscriptionFid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put customers customer fid subscriptions subscription fid periods period fid refund params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) WithDefaults() *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put customers customer fid subscriptions subscription fid periods period fid refund params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) WithTimeout(timeout time.Duration) *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) WithContext(ctx context.Context) *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) WithHTTPClient(client *http.Client) *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddCreditToInvoice adds the addCreditToInvoice to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) WithAddCreditToInvoice(addCreditToInvoice *bool) *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	o.SetAddCreditToInvoice(addCreditToInvoice)
	return o
}

// SetAddCreditToInvoice adds the addCreditToInvoice to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) SetAddCreditToInvoice(addCreditToInvoice *bool) {
	o.AddCreditToInvoice = addCreditToInvoice
}

// WithCustomerFid adds the customerFid to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) WithCustomerFid(customerFid string) *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	o.SetCustomerFid(customerFid)
	return o
}

// SetCustomerFid adds the customerFid to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) SetCustomerFid(customerFid string) {
	o.CustomerFid = customerFid
}

// WithPeriodFid adds the periodFid to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) WithPeriodFid(periodFid string) *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	o.SetPeriodFid(periodFid)
	return o
}

// SetPeriodFid adds the periodFid to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) SetPeriodFid(periodFid string) {
	o.PeriodFid = periodFid
}

// WithReason adds the reason to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) WithReason(reason *string) *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	o.SetReason(reason)
	return o
}

// SetReason adds the reason to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) SetReason(reason *string) {
	o.Reason = reason
}

// WithRefundAmount adds the refundAmount to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) WithRefundAmount(refundAmount *float64) *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	o.SetRefundAmount(refundAmount)
	return o
}

// SetRefundAmount adds the refundAmount to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) SetRefundAmount(refundAmount *float64) {
	o.RefundAmount = refundAmount
}

// WithSubscriptionFid adds the subscriptionFid to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) WithSubscriptionFid(subscriptionFid string) *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams {
	o.SetSubscriptionFid(subscriptionFid)
	return o
}

// SetSubscriptionFid adds the subscriptionFid to the put customers customer fid subscriptions subscription fid periods period fid refund params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) SetSubscriptionFid(subscriptionFid string) {
	o.SubscriptionFid = subscriptionFid
}

// WriteToRequest writes these params to a swagger request
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidPeriodsPeriodFidRefundParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AddCreditToInvoice != nil {

		// form param addCreditToInvoice
		var frAddCreditToInvoice bool
		if o.AddCreditToInvoice != nil {
			frAddCreditToInvoice = *o.AddCreditToInvoice
		}
		fAddCreditToInvoice := swag.FormatBool(frAddCreditToInvoice)
		if fAddCreditToInvoice != "" {
			if err := r.SetFormParam("addCreditToInvoice", fAddCreditToInvoice); err != nil {
				return err
			}
		}
	}

	// path param customerFid
	if err := r.SetPathParam("customerFid", o.CustomerFid); err != nil {
		return err
	}

	// path param periodFid
	if err := r.SetPathParam("periodFid", o.PeriodFid); err != nil {
		return err
	}

	if o.Reason != nil {

		// form param reason
		var frReason string
		if o.Reason != nil {
			frReason = *o.Reason
		}
		fReason := frReason
		if fReason != "" {
			if err := r.SetFormParam("reason", fReason); err != nil {
				return err
			}
		}
	}

	if o.RefundAmount != nil {

		// form param refundAmount
		var frRefundAmount float64
		if o.RefundAmount != nil {
			frRefundAmount = *o.RefundAmount
		}
		fRefundAmount := swag.FormatFloat64(frRefundAmount)
		if fRefundAmount != "" {
			if err := r.SetFormParam("refundAmount", fRefundAmount); err != nil {
				return err
			}
		}
	}

	// path param subscriptionFid
	if err := r.SetPathParam("subscriptionFid", o.SubscriptionFid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
