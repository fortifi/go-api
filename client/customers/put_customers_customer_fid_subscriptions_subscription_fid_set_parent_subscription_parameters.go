// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams creates a new PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams object
// with the default values initialized.
func NewPutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams() *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams {
	var ()
	return &PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParamsWithTimeout creates a new PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParamsWithTimeout(timeout time.Duration) *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams {
	var ()
	return &PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams{

		timeout: timeout,
	}
}

// NewPutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParamsWithContext creates a new PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParamsWithContext(ctx context.Context) *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams {
	var ()
	return &PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams{

		Context: ctx,
	}
}

// NewPutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParamsWithHTTPClient creates a new PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParamsWithHTTPClient(client *http.Client) *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams {
	var ()
	return &PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams{
		HTTPClient: client,
	}
}

/*PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams contains all the parameters to send to the API endpoint
for the put customers customer fid subscriptions subscription fid set parent subscription operation typically these are written to a http.Request
*/
type PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams struct {

	/*CustomerFid
	  Customer FID to use

	*/
	CustomerFid string
	/*ParentSubscriptionFid*/
	ParentSubscriptionFid string
	/*SubscriptionFid
	  Subscription FID to use

	*/
	SubscriptionFid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put customers customer fid subscriptions subscription fid set parent subscription params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) WithTimeout(timeout time.Duration) *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put customers customer fid subscriptions subscription fid set parent subscription params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put customers customer fid subscriptions subscription fid set parent subscription params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) WithContext(ctx context.Context) *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put customers customer fid subscriptions subscription fid set parent subscription params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put customers customer fid subscriptions subscription fid set parent subscription params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) WithHTTPClient(client *http.Client) *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put customers customer fid subscriptions subscription fid set parent subscription params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCustomerFid adds the customerFid to the put customers customer fid subscriptions subscription fid set parent subscription params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) WithCustomerFid(customerFid string) *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams {
	o.SetCustomerFid(customerFid)
	return o
}

// SetCustomerFid adds the customerFid to the put customers customer fid subscriptions subscription fid set parent subscription params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) SetCustomerFid(customerFid string) {
	o.CustomerFid = customerFid
}

// WithParentSubscriptionFid adds the parentSubscriptionFid to the put customers customer fid subscriptions subscription fid set parent subscription params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) WithParentSubscriptionFid(parentSubscriptionFid string) *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams {
	o.SetParentSubscriptionFid(parentSubscriptionFid)
	return o
}

// SetParentSubscriptionFid adds the parentSubscriptionFid to the put customers customer fid subscriptions subscription fid set parent subscription params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) SetParentSubscriptionFid(parentSubscriptionFid string) {
	o.ParentSubscriptionFid = parentSubscriptionFid
}

// WithSubscriptionFid adds the subscriptionFid to the put customers customer fid subscriptions subscription fid set parent subscription params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) WithSubscriptionFid(subscriptionFid string) *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams {
	o.SetSubscriptionFid(subscriptionFid)
	return o
}

// SetSubscriptionFid adds the subscriptionFid to the put customers customer fid subscriptions subscription fid set parent subscription params
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) SetSubscriptionFid(subscriptionFid string) {
	o.SubscriptionFid = subscriptionFid
}

// WriteToRequest writes these params to a swagger request
func (o *PutCustomersCustomerFidSubscriptionsSubscriptionFidSetParentSubscriptionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param customerFid
	if err := r.SetPathParam("customerFid", o.CustomerFid); err != nil {
		return err
	}

	// form param parentSubscriptionFid
	frParentSubscriptionFid := o.ParentSubscriptionFid
	fParentSubscriptionFid := frParentSubscriptionFid
	if fParentSubscriptionFid != "" {
		if err := r.SetFormParam("parentSubscriptionFid", fParentSubscriptionFid); err != nil {
			return err
		}
	}

	// path param subscriptionFid
	if err := r.SetPathParam("subscriptionFid", o.SubscriptionFid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
