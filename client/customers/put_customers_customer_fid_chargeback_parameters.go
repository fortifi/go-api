// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutCustomersCustomerFidChargebackParams creates a new PutCustomersCustomerFidChargebackParams object
// with the default values initialized.
func NewPutCustomersCustomerFidChargebackParams() *PutCustomersCustomerFidChargebackParams {
	var ()
	return &PutCustomersCustomerFidChargebackParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutCustomersCustomerFidChargebackParamsWithTimeout creates a new PutCustomersCustomerFidChargebackParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutCustomersCustomerFidChargebackParamsWithTimeout(timeout time.Duration) *PutCustomersCustomerFidChargebackParams {
	var ()
	return &PutCustomersCustomerFidChargebackParams{

		timeout: timeout,
	}
}

// NewPutCustomersCustomerFidChargebackParamsWithContext creates a new PutCustomersCustomerFidChargebackParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutCustomersCustomerFidChargebackParamsWithContext(ctx context.Context) *PutCustomersCustomerFidChargebackParams {
	var ()
	return &PutCustomersCustomerFidChargebackParams{

		Context: ctx,
	}
}

// NewPutCustomersCustomerFidChargebackParamsWithHTTPClient creates a new PutCustomersCustomerFidChargebackParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutCustomersCustomerFidChargebackParamsWithHTTPClient(client *http.Client) *PutCustomersCustomerFidChargebackParams {
	var ()
	return &PutCustomersCustomerFidChargebackParams{
		HTTPClient: client,
	}
}

/*PutCustomersCustomerFidChargebackParams contains all the parameters to send to the API endpoint
for the put customers customer fid chargeback operation typically these are written to a http.Request
*/
type PutCustomersCustomerFidChargebackParams struct {

	/*CustomerFid
	  Customer FID to use

	*/
	CustomerFid string
	/*IsoTime
	  Time in ISO 8601 standard with optional fractions of a second e.g 2015-12-05T13:11:59.888Z

	*/
	IsoTime *strfmt.DateTime

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put customers customer fid chargeback params
func (o *PutCustomersCustomerFidChargebackParams) WithTimeout(timeout time.Duration) *PutCustomersCustomerFidChargebackParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put customers customer fid chargeback params
func (o *PutCustomersCustomerFidChargebackParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put customers customer fid chargeback params
func (o *PutCustomersCustomerFidChargebackParams) WithContext(ctx context.Context) *PutCustomersCustomerFidChargebackParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put customers customer fid chargeback params
func (o *PutCustomersCustomerFidChargebackParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put customers customer fid chargeback params
func (o *PutCustomersCustomerFidChargebackParams) WithHTTPClient(client *http.Client) *PutCustomersCustomerFidChargebackParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put customers customer fid chargeback params
func (o *PutCustomersCustomerFidChargebackParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCustomerFid adds the customerFid to the put customers customer fid chargeback params
func (o *PutCustomersCustomerFidChargebackParams) WithCustomerFid(customerFid string) *PutCustomersCustomerFidChargebackParams {
	o.SetCustomerFid(customerFid)
	return o
}

// SetCustomerFid adds the customerFid to the put customers customer fid chargeback params
func (o *PutCustomersCustomerFidChargebackParams) SetCustomerFid(customerFid string) {
	o.CustomerFid = customerFid
}

// WithIsoTime adds the isoTime to the put customers customer fid chargeback params
func (o *PutCustomersCustomerFidChargebackParams) WithIsoTime(isoTime *strfmt.DateTime) *PutCustomersCustomerFidChargebackParams {
	o.SetIsoTime(isoTime)
	return o
}

// SetIsoTime adds the isoTime to the put customers customer fid chargeback params
func (o *PutCustomersCustomerFidChargebackParams) SetIsoTime(isoTime *strfmt.DateTime) {
	o.IsoTime = isoTime
}

// WriteToRequest writes these params to a swagger request
func (o *PutCustomersCustomerFidChargebackParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param customerFid
	if err := r.SetPathParam("customerFid", o.CustomerFid); err != nil {
		return err
	}

	if o.IsoTime != nil {

		// form param isoTime
		var frIsoTime strfmt.DateTime
		if o.IsoTime != nil {
			frIsoTime = *o.IsoTime
		}
		fIsoTime := frIsoTime.String()
		if fIsoTime != "" {
			if err := r.SetFormParam("isoTime", fIsoTime); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
