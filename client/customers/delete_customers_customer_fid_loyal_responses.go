// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/fortifi/go-api/models"
)

// DeleteCustomersCustomerFidLoyalReader is a Reader for the DeleteCustomersCustomerFidLoyal structure.
type DeleteCustomersCustomerFidLoyalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCustomersCustomerFidLoyalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteCustomersCustomerFidLoyalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteCustomersCustomerFidLoyalNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteCustomersCustomerFidLoyalDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteCustomersCustomerFidLoyalOK creates a DeleteCustomersCustomerFidLoyalOK with default headers values
func NewDeleteCustomersCustomerFidLoyalOK() *DeleteCustomersCustomerFidLoyalOK {
	return &DeleteCustomersCustomerFidLoyalOK{}
}

/*DeleteCustomersCustomerFidLoyalOK handles this case with default header values.

Customer No Longer Loyal
*/
type DeleteCustomersCustomerFidLoyalOK struct {
}

func (o *DeleteCustomersCustomerFidLoyalOK) Error() string {
	return fmt.Sprintf("[DELETE /customers/{customerFid}/loyal][%d] deleteCustomersCustomerFidLoyalOK ", 200)
}

func (o *DeleteCustomersCustomerFidLoyalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCustomersCustomerFidLoyalNotFound creates a DeleteCustomersCustomerFidLoyalNotFound with default headers values
func NewDeleteCustomersCustomerFidLoyalNotFound() *DeleteCustomersCustomerFidLoyalNotFound {
	return &DeleteCustomersCustomerFidLoyalNotFound{}
}

/*DeleteCustomersCustomerFidLoyalNotFound handles this case with default header values.

Customer not found
*/
type DeleteCustomersCustomerFidLoyalNotFound struct {
}

func (o *DeleteCustomersCustomerFidLoyalNotFound) Error() string {
	return fmt.Sprintf("[DELETE /customers/{customerFid}/loyal][%d] deleteCustomersCustomerFidLoyalNotFound ", 404)
}

func (o *DeleteCustomersCustomerFidLoyalNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCustomersCustomerFidLoyalDefault creates a DeleteCustomersCustomerFidLoyalDefault with default headers values
func NewDeleteCustomersCustomerFidLoyalDefault(code int) *DeleteCustomersCustomerFidLoyalDefault {
	return &DeleteCustomersCustomerFidLoyalDefault{
		_statusCode: code,
	}
}

/*DeleteCustomersCustomerFidLoyalDefault handles this case with default header values.

Error
*/
type DeleteCustomersCustomerFidLoyalDefault struct {
	_statusCode int

	Payload *models.Envelope
}

// Code gets the status code for the delete customers customer fid loyal default response
func (o *DeleteCustomersCustomerFidLoyalDefault) Code() int {
	return o._statusCode
}

func (o *DeleteCustomersCustomerFidLoyalDefault) Error() string {
	return fmt.Sprintf("[DELETE /customers/{customerFid}/loyal][%d] DeleteCustomersCustomerFidLoyal default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteCustomersCustomerFidLoyalDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Envelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
