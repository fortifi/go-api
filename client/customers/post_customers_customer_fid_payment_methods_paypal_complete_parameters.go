// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostCustomersCustomerFidPaymentMethodsPaypalCompleteParams creates a new PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams object
// with the default values initialized.
func NewPostCustomersCustomerFidPaymentMethodsPaypalCompleteParams() *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams {
	var ()
	return &PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostCustomersCustomerFidPaymentMethodsPaypalCompleteParamsWithTimeout creates a new PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostCustomersCustomerFidPaymentMethodsPaypalCompleteParamsWithTimeout(timeout time.Duration) *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams {
	var ()
	return &PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams{

		timeout: timeout,
	}
}

// NewPostCustomersCustomerFidPaymentMethodsPaypalCompleteParamsWithContext creates a new PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostCustomersCustomerFidPaymentMethodsPaypalCompleteParamsWithContext(ctx context.Context) *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams {
	var ()
	return &PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams{

		Context: ctx,
	}
}

// NewPostCustomersCustomerFidPaymentMethodsPaypalCompleteParamsWithHTTPClient creates a new PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostCustomersCustomerFidPaymentMethodsPaypalCompleteParamsWithHTTPClient(client *http.Client) *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams {
	var ()
	return &PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams{
		HTTPClient: client,
	}
}

/*PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams contains all the parameters to send to the API endpoint
for the post customers customer fid payment methods paypal complete operation typically these are written to a http.Request
*/
type PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams struct {

	/*CustomerFid
	  Customer FID to use

	*/
	CustomerFid string
	/*PaymentServiceFid
	  Payment Service FID to use

	*/
	PaymentServiceFid string
	/*SubscriptionFids
	  Subscription FIDs

	*/
	SubscriptionFids []string
	/*Token*/
	Token string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) WithTimeout(timeout time.Duration) *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) WithContext(ctx context.Context) *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) WithHTTPClient(client *http.Client) *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCustomerFid adds the customerFid to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) WithCustomerFid(customerFid string) *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams {
	o.SetCustomerFid(customerFid)
	return o
}

// SetCustomerFid adds the customerFid to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) SetCustomerFid(customerFid string) {
	o.CustomerFid = customerFid
}

// WithPaymentServiceFid adds the paymentServiceFid to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) WithPaymentServiceFid(paymentServiceFid string) *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams {
	o.SetPaymentServiceFid(paymentServiceFid)
	return o
}

// SetPaymentServiceFid adds the paymentServiceFid to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) SetPaymentServiceFid(paymentServiceFid string) {
	o.PaymentServiceFid = paymentServiceFid
}

// WithSubscriptionFids adds the subscriptionFids to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) WithSubscriptionFids(subscriptionFids []string) *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams {
	o.SetSubscriptionFids(subscriptionFids)
	return o
}

// SetSubscriptionFids adds the subscriptionFids to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) SetSubscriptionFids(subscriptionFids []string) {
	o.SubscriptionFids = subscriptionFids
}

// WithToken adds the token to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) WithToken(token string) *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams {
	o.SetToken(token)
	return o
}

// SetToken adds the token to the post customers customer fid payment methods paypal complete params
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) SetToken(token string) {
	o.Token = token
}

// WriteToRequest writes these params to a swagger request
func (o *PostCustomersCustomerFidPaymentMethodsPaypalCompleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param customerFid
	if err := r.SetPathParam("customerFid", o.CustomerFid); err != nil {
		return err
	}

	// form param paymentServiceFid
	frPaymentServiceFid := o.PaymentServiceFid
	fPaymentServiceFid := frPaymentServiceFid
	if fPaymentServiceFid != "" {
		if err := r.SetFormParam("paymentServiceFid", fPaymentServiceFid); err != nil {
			return err
		}
	}

	valuesSubscriptionFids := o.SubscriptionFids

	joinedSubscriptionFids := swag.JoinByFormat(valuesSubscriptionFids, "")
	// form array param subscriptionFids
	if err := r.SetFormParam("subscriptionFids", joinedSubscriptionFids...); err != nil {
		return err
	}

	// form param token
	frToken := o.Token
	fToken := frToken
	if fToken != "" {
		if err := r.SetFormParam("token", fToken); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
