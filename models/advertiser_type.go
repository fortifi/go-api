// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AdvertiserType Advertiser Type
//
// swagger:model AdvertiserType
type AdvertiserType string

func NewAdvertiserType(value AdvertiserType) *AdvertiserType {
	v := value
	return &v
}

const (

	// AdvertiserTypeAffiliate captures enum value "affiliate"
	AdvertiserTypeAffiliate AdvertiserType = "affiliate"

	// AdvertiserTypeNetwork captures enum value "network"
	AdvertiserTypeNetwork AdvertiserType = "network"

	// AdvertiserTypeCustomer captures enum value "customer"
	AdvertiserTypeCustomer AdvertiserType = "customer"

	// AdvertiserTypeDisplay captures enum value "display"
	AdvertiserTypeDisplay AdvertiserType = "display"

	// AdvertiserTypePriorityAffiliate captures enum value "priority_affiliate"
	AdvertiserTypePriorityAffiliate AdvertiserType = "priority_affiliate"

	// AdvertiserTypeOffline captures enum value "offline"
	AdvertiserTypeOffline AdvertiserType = "offline"

	// AdvertiserTypePpc captures enum value "ppc"
	AdvertiserTypePpc AdvertiserType = "ppc"

	// AdvertiserTypeInternal captures enum value "internal"
	AdvertiserTypeInternal AdvertiserType = "internal"

	// AdvertiserTypeSearchEngine captures enum value "search_engine"
	AdvertiserTypeSearchEngine AdvertiserType = "search_engine"

	// AdvertiserTypeMobile captures enum value "mobile"
	AdvertiserTypeMobile AdvertiserType = "mobile"

	// AdvertiserTypeEmail captures enum value "email"
	AdvertiserTypeEmail AdvertiserType = "email"

	// AdvertiserTypeRetarget captures enum value "retarget"
	AdvertiserTypeRetarget AdvertiserType = "retarget"

	// AdvertiserTypeContent captures enum value "content"
	AdvertiserTypeContent AdvertiserType = "content"
)

// for schema
var advertiserTypeEnum []interface{}

func init() {
	var res []AdvertiserType
	if err := json.Unmarshal([]byte(`["affiliate","network","customer","display","priority_affiliate","offline","ppc","internal","search_engine","mobile","email","retarget","content"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		advertiserTypeEnum = append(advertiserTypeEnum, v)
	}
}

func (m AdvertiserType) validateAdvertiserTypeEnum(path, location string, value AdvertiserType) error {
	if err := validate.EnumCase(path, location, value, advertiserTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this advertiser type
func (m AdvertiserType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAdvertiserTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this advertiser type based on context it is used
func (m AdvertiserType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
