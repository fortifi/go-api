// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// CustomerSubscriptionType Customer Subscription Status
// swagger:model customerSubscriptionType
type CustomerSubscriptionType string

const (
	// CustomerSubscriptionTypeNone captures enum value "none"
	CustomerSubscriptionTypeNone CustomerSubscriptionType = "none"
	// CustomerSubscriptionTypeTrial captures enum value "trial"
	CustomerSubscriptionTypeTrial CustomerSubscriptionType = "trial"
	// CustomerSubscriptionTypeFree captures enum value "free"
	CustomerSubscriptionTypeFree CustomerSubscriptionType = "free"
	// CustomerSubscriptionTypePaid captures enum value "paid"
	CustomerSubscriptionTypePaid CustomerSubscriptionType = "paid"
)

// for schema
var customerSubscriptionTypeEnum []interface{}

func init() {
	var res []CustomerSubscriptionType
	if err := json.Unmarshal([]byte(`["none","trial","free","paid"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		customerSubscriptionTypeEnum = append(customerSubscriptionTypeEnum, v)
	}
}

func (m CustomerSubscriptionType) validateCustomerSubscriptionTypeEnum(path, location string, value CustomerSubscriptionType) error {
	if err := validate.Enum(path, location, value, customerSubscriptionTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this customer subscription type
func (m CustomerSubscriptionType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCustomerSubscriptionTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
