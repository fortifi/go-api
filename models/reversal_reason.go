// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ReversalReason The reason for reversing the action
//
// swagger:model reversalReason
type ReversalReason string

func NewReversalReason(value ReversalReason) *ReversalReason {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ReversalReason.
func (m ReversalReason) Pointer() *ReversalReason {
	return &m
}

const (

	// ReversalReasonChargeback captures enum value "chargeback"
	ReversalReasonChargeback ReversalReason = "chargeback"

	// ReversalReasonCancel captures enum value "cancel"
	ReversalReasonCancel ReversalReason = "cancel"

	// ReversalReasonFraud captures enum value "fraud"
	ReversalReasonFraud ReversalReason = "fraud"
)

// for schema
var reversalReasonEnum []interface{}

func init() {
	var res []ReversalReason
	if err := json.Unmarshal([]byte(`["chargeback","cancel","fraud"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		reversalReasonEnum = append(reversalReasonEnum, v)
	}
}

func (m ReversalReason) validateReversalReasonEnum(path, location string, value ReversalReason) error {
	if err := validate.EnumCase(path, location, value, reversalReasonEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this reversal reason
func (m ReversalReason) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateReversalReasonEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this reversal reason based on context it is used
func (m ReversalReason) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
