// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateOrderPayload create order payload
// swagger:model CreateOrderPayload
type CreateOrderPayload struct {

	// FID of a valid Brand
	BrandFid string `json:"brandFid,omitempty"`

	// Charge ID provided by ChargeHive.com
	ChargeID string `json:"chargeId,omitempty"`

	// IP Address of the visitor
	ClientIP string `json:"clientIp,omitempty"`

	// Automatically confirm this order
	Confirm *bool `json:"confirm,omitempty"`

	// FID for the customer placing the order
	CustomerFid string `json:"customerFid,omitempty"`

	// Custom display name for this order
	DisplayName string `json:"displayName,omitempty"`

	// Reference for this order
	ExternalReference string `json:"externalReference,omitempty"`

	// Offer FIDs to apply to the order
	OfferFids []string `json:"offerFids"`

	// Confirm this order only after this parent is completed
	ParentOrderFid string `json:"parentOrderFid,omitempty"`

	// FID for the payment account you wish to charge the customer through
	PaymentAccountFid string `json:"paymentAccountFid,omitempty"`

	// Product price FIDs to add
	ProductPriceFids []string `json:"productPriceFids"`

	// products
	Products []*OrderProductPayload `json:"products"`

	// type
	Type CreateOrderType `json:"type,omitempty"`

	// User Agent of the visitors browser 'HTTP_USER_AGENT'
	UserAgent string `json:"userAgent,omitempty"`
}

// Validate validates this create order payload
func (m *CreateOrderPayload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProducts(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateOrderPayload) validateProducts(formats strfmt.Registry) error {

	if swag.IsZero(m.Products) { // not required
		return nil
	}

	for i := 0; i < len(m.Products); i++ {
		if swag.IsZero(m.Products[i]) { // not required
			continue
		}

		if m.Products[i] != nil {
			if err := m.Products[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *CreateOrderPayload) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	if err := m.Type.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("type")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateOrderPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateOrderPayload) UnmarshalBinary(b []byte) error {
	var res CreateOrderPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
