// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CustomerFlags Flags assigned to the customer
//
// swagger:model CustomerFlags
type CustomerFlags struct {

	// chargeback
	Chargeback bool `json:"chargeback,omitempty"`

	// discount
	Discount bool `json:"discount,omitempty"`

	// fraud
	Fraud bool `json:"fraud,omitempty"`

	// has purchased
	HasPurchased bool `json:"hasPurchased,omitempty"`

	// has subscribed
	HasSubscribed bool `json:"hasSubscribed,omitempty"`

	// impulse
	Impulse bool `json:"impulse,omitempty"`

	// is subscribed
	IsSubscribed bool `json:"isSubscribed,omitempty"`

	// loyal
	Loyal bool `json:"loyal,omitempty"`

	// qualified
	Qualified bool `json:"qualified,omitempty"`

	// refunded
	Refunded bool `json:"refunded,omitempty"`

	// renewing
	Renewing bool `json:"renewing,omitempty"`

	// test account
	TestAccount bool `json:"testAccount,omitempty"`

	// vip
	Vip bool `json:"vip,omitempty"`
}

// Validate validates this customer flags
func (m *CustomerFlags) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this customer flags based on context it is used
func (m *CustomerFlags) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CustomerFlags) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomerFlags) UnmarshalBinary(b []byte) error {
	var res CustomerFlags
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
