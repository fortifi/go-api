// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// CreditAmountType Credit amount type
// swagger:model creditAmountType
type CreditAmountType string

const (
	// CreditAmountTypePercentOfRemaining captures enum value "percent_of_remaining"
	CreditAmountTypePercentOfRemaining CreditAmountType = "percent_of_remaining"
	// CreditAmountTypePercentOfTotal captures enum value "percent_of_total"
	CreditAmountTypePercentOfTotal CreditAmountType = "percent_of_total"
	// CreditAmountTypeFixed captures enum value "fixed"
	CreditAmountTypeFixed CreditAmountType = "fixed"
)

// for schema
var creditAmountTypeEnum []interface{}

func init() {
	var res []CreditAmountType
	if err := json.Unmarshal([]byte(`["percent_of_remaining","percent_of_total","fixed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		creditAmountTypeEnum = append(creditAmountTypeEnum, v)
	}
}

func (m CreditAmountType) validateCreditAmountTypeEnum(path, location string, value CreditAmountType) error {
	if err := validate.Enum(path, location, value, creditAmountTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this credit amount type
func (m CreditAmountType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCreditAmountTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
