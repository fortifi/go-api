// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MessengerActionPayload messenger action payload
//
// swagger:model MessengerActionPayload
type MessengerActionPayload struct {

	// action
	Action string `json:"action,omitempty"`

	// amount
	Amount float32 `json:"amount,omitempty"`

	// client
	Client string `json:"client,omitempty"`

	// client blended
	ClientBlended string `json:"clientBlended,omitempty"`

	// client Ip
	ClientIP string `json:"clientIp,omitempty"`

	// client version
	ClientVersion string `json:"clientVersion,omitempty"`

	// company fid
	CompanyFid string `json:"companyFid,omitempty"`

	// delivery fid
	DeliveryFid string `json:"deliveryFid,omitempty"`

	// device
	Device string `json:"device,omitempty"`

	// encoding
	Encoding string `json:"encoding,omitempty"`

	// language
	Language string `json:"language,omitempty"`

	// os
	Os string `json:"os,omitempty"`

	// os blended
	OsBlended string `json:"osBlended,omitempty"`

	// os version
	OsVersion string `json:"osVersion,omitempty"`

	// platform
	Platform string `json:"platform,omitempty"`

	// referrer
	Referrer string `json:"referrer,omitempty"`

	// source type
	SourceType string `json:"sourceType,omitempty"`

	// user agent
	UserAgent string `json:"userAgent,omitempty"`

	// visitor Id
	VisitorID string `json:"visitorId,omitempty"`
}

// Validate validates this messenger action payload
func (m *MessengerActionPayload) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this messenger action payload based on context it is used
func (m *MessengerActionPayload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MessengerActionPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MessengerActionPayload) UnmarshalBinary(b []byte) error {
	var res MessengerActionPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
